import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.util.Random;

//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : Untitled
//  @ File Name : RoboFighter.java
//  @ Date : 3/29/2013
//  @ Author : 
//
//




public abstract class RoboFighter extends Entity {
	public boolean isHuman;
	
	public int ammunition;
	public int damage;
	public int kills;
	
	public String name;
	public FightStrategy strategy;
	
	//public static int strength;
	public int indStrength;

	public static float hueIndex = (float) 0.6;
	
	public RoboFighter(int radius, Simulation simulation) {
		
		super(radius, simulation);
		
		this.isHuman = false;
		
		//Random random = new Random();
		
		//float hue = (float) random.nextDouble();
		
		this.color = Color.getHSBColor(hueIndex,1.0f,1.0f);
		hueIndex += 0.1;
		
		//this.x = random.nextInt(simulation.zoneWidth - radius);
		//this.y = random.nextInt(simulation.zoneHeight - radius);
		
		this.damage = 0;
		this.kills = 0;
		
	}
	
	public RoboFighter(RoboFighter roboFighter) {
		super(roboFighter.radius, roboFighter.simulation);
		this.ammunition = roboFighter.ammunition;
		this.damage = roboFighter.damage;
		this.indStrength = roboFighter.indStrength;
		this.name = roboFighter.name;
		this.radius = roboFighter.radius;
		this.strategy = roboFighter.strategy;
		this.x = roboFighter.x;
		this.y = roboFighter.y;
		this.color = roboFighter.color;
		this.kills = roboFighter.kills;
		this.isHuman = roboFighter.isHuman;
	}
	
	@Override
	public void draw(Graphics2D g2d) {
		super.draw(g2d);
		
		int width = g2d.getFontMetrics().charsWidth(name.toCharArray(), 0, name.length());
		
		g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
		g2d.setRenderingHint(RenderingHints.KEY_FRACTIONALMETRICS, RenderingHints.VALUE_FRACTIONALMETRICS_ON);
		
		
		g2d.drawString(name, (int) ((int) x - width/2.2),(int) ((int)  y - 1.05*radius));
		
		g2d.drawString(Integer.toString(indStrength), (int) ((int) x - radius/2.5),(int) ((int)  y - radius/2.5));
		g2d.drawString(Integer.toString(ammunition), (int) ((int) x - radius/2.5),(int) ((int)  y + radius/6.5));
		g2d.drawString(Integer.toString(kills), (int) ((int) x - radius/6),(int) ((int)  y + radius/1.5));
	}
	
	@Override
	public void step(double deltaTime) {
		this.strategy.move(this, deltaTime);
	}
	
	public void sync(RoboFighter r) {
		x = r.x;
		y = r.y;
		ammunition = r.ammunition;
		damage = r.damage;
		indStrength = r.indStrength;
		radius = r.radius;
	}

}
