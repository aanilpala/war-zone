import java.util.Random;

//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : Untitled
//  @ File Name : FightStrategy.java
//  @ Date : 3/29/2013
//  @ Author : 
//
//




public abstract class FightStrategy {
	public int stepsToFire;
	public double stepDeltaX, stepDeltaY;
	public double theta;
	
	public FightStrategy() {
		Random random = new Random();
		
		int randInt = random.nextInt();
		
		this.stepDeltaX = Math.cos(randInt);
		this.stepDeltaY = Math.sin(randInt);
		
		
	}
	
	public static void avoidCollision(double x, double y, RoboFighter r) {
		
		double distance;
		
		for(RoboFighter each : r.simulation.roboFighters) {
			if(each.equals(r)) continue;
			distance = Projectile.findDistance(r.x, each.x, r.y, each.y);
			if(distance < r.radius + each.radius) {
				//each.x -= each.strategy.stepDeltaX;
				//each.y -= each.strategy.stepDeltaY;
				r.x -= r.strategy.stepDeltaX;
				r.y -= r.strategy.stepDeltaY;
				//avoidCollision(r.x, r.y, r);
				return;
			}
		}
		
		return;
	}
	
	public static int insideCheck(double x, double y, double constraintX, double constraintY, double radius) {
		
		if(x <= radius || x >= constraintX - radius) return -1;
		if(y <= radius || y >= constraintY - radius) return -2;
		
		if((constraintX - radius) - x < (constraintY - radius) - y) return 1;
		else return 2;
	}
	
	public void move(RoboFighter r, double deltaTime) {
	}
}
